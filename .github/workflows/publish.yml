name: Publish

on:
  push:
    branches:
      - main
      - beta
      - alpha
      
jobs:
  publish:
    environment: ${{ github.ref }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest ]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v1

      - name: Install Node, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Charting Library
        run: |
          wget ${{ secrets.CHARTING_LIBRARY_ARCHIVE_URL }} --no-check-certificate
          unzip charting_library.zip -d charting_library
          mv charting_library assets
          rm -rf charting_library.zip

      - name: Update channel package.json version
        run: |
          node -e "let pkg=require('./src/package.json'); pkg.version=pkg.version + (process.env.RELEASE_TAG_NAME !== 'latest' ? '-' + process.env.RELEASE_TAG_NAME : ''); require('fs').writeFileSync('src/package.json', JSON.stringify(pkg, null, 2));"
          cat ./src/package.json
        env:
          RELEASE_TAG_NAME: '${{ secrets.RELEASE_TAG_NAME }}'

      - name: Install dependencies
        run: |
          yarn install --prefer-offline

      - name: Publish releases
        env:
          # These values are used for auto updates signing
          # APPLE_ID: ${{ secrets.APPLE_ID }}
          # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
          # CSC_LINK: ${{ secrets.CSC_LINK }}
          # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          # This is used for uploading release assets to github
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG_NAME: '${{ secrets.RELEASE_TAG_NAME }}'
        run: |
          yarn package:publish
