name: Publish

on:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest ]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v1

      - name: Install Node, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Charting Library
        run: |
          wget ${{ secrets.CHARTING_LIBRARY_ARCHIVE_URL }} --no-check-certificate
          unzip charting_library.zip -d charting_library
          mv charting_library assets
          rm -rf charting_library.zip

      - name: Update channel package.json version
        run: |
          node -e "let pkg=require('./src/package.json'); pkg.version=pkg.version + (${{ secrets.RELEASE_TAG_NAME }} ? '-' + ${{ secrets.RELEASE_TAG_NAME }} : ''); require('fs').writeFileSync('src/package.json', JSON.stringify(pkg, null, 2));"
          cat ./src/package.json